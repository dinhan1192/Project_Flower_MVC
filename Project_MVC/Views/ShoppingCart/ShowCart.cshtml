@using Project_MVC.Models
@using Project_MVC.Utils
@using Project_MVC.Services

@{
    Layout = "~/Views/Shared/_LayoutCustomerPage.cshtml";
    ViewBag.Title = "GetParameter";
    var cart = ViewBag.shoppingCart as ShoppingCart;
    var cartInfo = new CartInformation();
    var flowerService = new MySQLFlowerService();
    var categoryCode = ViewBag.CategoryCode;
}





<!--Start Shopping Cart top area -->
@using (Html.BeginForm("UpdateCart", "ShoppingCart", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @*<input type="hidden" name="hidCategoryCode" id="hidCategoryCode" value="@categoryCode" />*@
    @Html.Hidden("hidCategoryCode", (object)categoryCode)
    <div class="shopping_cart_area">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="cart_title">
                        <h2>Shopping Cart</h2>
                    </div>
                    <div class="shopping-cart-table">
                        <table class="cart_items">
                            <tr>
                                <th>Code</th>
                                <th>Image</th>
                                <th>Product Name</th>
                                <th>Quantity</th>
                                <th>Unit Price</th>
                                <th>Delete</th>
                            </tr>
                            @*<tr>*@

                            @foreach (var item in cart.GetCartItems())
                            {
                                <tr>
                                    <td>@item.Value.FlowerCode</td>
                                    @{
                                        var flower = flowerService.Detail(item.Value.FlowerCode);
                                        var flowerImages = new List<FlowerImage>();
                                        var firstFlowerImage = new FlowerImage();
                                        if (flower != null)
                                        {
                                            flowerImages = flower.FlowerImages.ToList();
                                            if (flowerImages.Count > 0)
                                            {
                                                firstFlowerImage = flowerImages.OrderBy(s => s.CreatedAt).FirstOrDefault();
                                            }
                                        }
                                    }
                                    <td>
                                        <img src="@firstFlowerImage.ImageUrl" alt="Smiley face" height="200" width="200">
                                    </td>
                                    <td>@item.Value.FlowerName</td>
                                    <td><input type="text" name="quantity" id="quantity" value="@item.Value.Quantity" /></td>
                                    <td>@item.Value.Price</td>
                                    <td>
                                        <a onclick="return confirm('Ban co chac muon xoa san pham tuyet voi cua chung toi ra khoi gio hang khong.')" href="/ShoppingCart/RemoveCart?code=@item.Value.FlowerCode">Remove</a>
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="shopping_cart_main">
                        <div class="shopping_button">
                            <button type="button" onclick="location.href='@Url.Action("IndexCustomer", "Flowers", new { categoryCode = categoryCode })'" ; title="shop" class="continue_shopping">Tiếp tục chọn hoa</button>
                        </div>
                        <div class="shopping_button">
                            <button type="button" onclick="location.href='@Url.Action("ClearShoppingCart", "ShoppingCart", new { isLogout = false })'" return false;" title="shop" class="continue_shopping">Xóa giỏ hàng</button>
                        </div>
                        <div class="shopping_button">
                            <span id="errmsg"></span>
                            <button type="submit" class="continue_shopping" value="">Sửa giỏ hàng</button>
                            <span id="errmsg"></span>
                            @*<button type="submit" onclick="location.href='@Url.Action("UpdateCart", "ShoppingCart")'" class="continue_shopping">Update Shopping Cart</button>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<!--End Shopping Cart top area -->
<!--Start Estimate Shipping,Discount,Total checkout area -->
<div class="cart-collaterals-item">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-6 col-sm-12 col-xs-12">
                <div class="shopping_details_des">
                    @using (Html.BeginForm("CreateOrder", "ShoppingCart", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <div class="shopping_form">
                            <h4>Họ tên người nhận:</h4>
                            @Html.EditorFor(m => cartInfo.ShipName)
                            <h4>Điện thoại người nhận:</h4>
                            @Html.EditorFor(m => cartInfo.ShipPhone)
                            <h4>Địa chỉ người nhận:</h4>
                            @Html.EditorFor(m => cartInfo.ShipAddress)
                            <br />
                            Loại thanh toán: @Html.DropDownListFor(m => cartInfo.PaymentTypeId, EnumHelper.GetSelectList(typeof(Order.PaymentType)))
                            <br />
                            @*Ngôn ngữ: @Html.DropDownListFor(m => cartInfo.Language, new SelectList(Utils.GetDict(), "Value", "Key"))*@
                        </div>
                        <input type="submit" value="Tạo đơn hàng" class="btn btn-danger" />
                    }

                    @*<h2>Estimate Shipping and Tax</h2>
                        <h3>Enter your destination to get shipping and tax.</h3>
                        <div class="shopping_form">
                            <h4>Country<span>*</span></h4>
                            <h4>Zip/Postal Code</h4>
                            <input class="input-text validate-postcode" type="text" name="estimate_postcode" value="">
                            <div class="review_button product_tag_add">
                                <button type="submit" title="Submit Review" class="button">Get a Quote</button>
                            </div>*@
                </div>
            </div>

            <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                <div class="total_price">
                    <table class="total_rate">
                        <tr>
                            <th>Grand Total</th>
                            <th><b>@cart.GetTotalPrice()</b></th>
                        </tr>
                    </table>
                </div>
                <div class="check_out_simble review_button">
                    <button type="submit" title="Submit Review" class="button">Checkout</button>
                    <h2><a href="">Checkout with Multiple Addresses</a></h2>
                </div>
            </div>

        </div>
    </div>
</div>
@section Scripts{
    <script>
        $(document).ready(function () {
            var lstQuantities = document.querySelectorAll('[name="quantity"]');
            $.each(lstQuantities, function () {
                $(this).keypress(function (e) {
                    if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                        $("#errmsg").html("Enter digits only").show().fadeOut("slow");
                        return false;
                    }
                })
            });
        });
    </script>
}
